<project name="LexmarkServicesCommon" default="dist" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib" value="lib"/>
  <property name="projectName" value="LexmarkServicesCommon"/>
  <property name="tomcat-lib" location="..\ExternalLib\tomcat-6.0.18-lib" />
  
  <path id="project.jar.path">	
    <fileset dir="${lib}" >
	  <include name="**/*.jar"/>
    </fileset>
 	
    <fileset dir="../DctmWebServiceClient/dist/lib" >
    	<include name="**/*.jar"/>
    </fileset>
  	
  	<fileset dir="../LexmarkServicesWebService/dist/lib" >
  	    	<include name="**/*.jar"/>
  	</fileset>
    	
    <fileset dir="${tomcat-lib}" >
 	  <include name="**/*.jar"/>
    </fileset>
  
 </path>
	
  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="buildDctmWebServiceClient">
	 <ant dir="../DctmWebServiceClient" target="dist" inheritAll="false"/>
  </target>
	
  <target name="compile" depends="init, buildDctmWebServiceClient"
        description="compile the source " >
  	<echo>${build}</echo>

    <!-- Compile the java code from ${src} into ${build} -->
  	<javac destdir="${build}" source="1.6" target="1.6" debug="true" debuglevel="lines,vars,source">
  	    <compilerarg value="-Xlint:unchecked"/>
  	    <src path="${src}"/>
  	    <classpath refid="project.jar.path" />
  	</javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>

    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/${projectName}.jar" basedir="${build}">
        <fileset dir="${src}"
                 excludes="**/*.java"
        />
  	</jar>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
</project>