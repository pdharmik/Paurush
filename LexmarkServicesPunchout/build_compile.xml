<project name="LexmarkServicesPunchout" default="compile" basedir=".">
	
	<property name="src" location="src"/>
	<property name="srcommon" location="../LexmarkServicesCommon/src"/>
	<!--<property name="srcdctm" location="../DctmWebServiceClient/src"/>-->
	<property name="srwebservice" location="../LexmarkServicesWebService/src"/>
	<property name="buildportal" location="WebContent/WEB-INF/classes"/>
	
	<property name="lib" value="WebContent/WEB-INF/lib"/>
	<property name="tomcat-lib" location="../ExternalLib/tomcat-6.0.18-lib" />
	<property name="context.file" value="LexmarkServicesPunchout.xml"/>
	<property name="auto.deploy.dir" value="D:/MPS_Lexmark/Liferay 6.2/liferay-portal-6.2-ce-ga2/deploy"/>    
	

	<path id="project.jar.path">	
	  <fileset dir="${lib}" >
		  <include name="**/*.jar"/>
	  </fileset>	
	 	
	  <fileset dir="../LexmarkServicesCommon/dist/lib" >
	    <include name="**/*.jar"/>
	  </fileset>
	 <!-- 
	  <fileset dir="../DctmWebServiceClient/dist/lib" >
	 	<include name="**/*.jar"/>
	  </fileset>
	 	-->
	  <fileset dir="../LexmarkServicesWebService/dist/lib" >
	 	 	<include name="**/*.jar"/>
	  </fileset>
		 
	  <fileset dir="${tomcat-lib}" >
			  <include name="**/*.jar"/>
	   </fileset>
	 	
	   <fileset dir="../LexmarkServicesCommon/lib/" >
	 	    <include name="junit-4.0.jar"/>
	    </fileset>
	 </path>
	
	<!-- Build it -->
	<target name="init" description="creates classes folder">
		 <mkdir dir="${buildportal}"/>	
    </target>
	
	<target name="compile" depends="init,compileCommom,compileweservice,compileServicesPunchout" description="compile the source for all" />
	
	<target name="clean" description="removes classes folder" >
		<delete dir="WebContent/WEB-INF/classes"/>  
	</target>
	
	<!-- Build LexmarkServicesPortal-->
	<target name="compileServicesPunchout" description="compile the source for LexmarkServicesPunchout" >
	    <javac  fork="true"  memoryinitialsize="256m"
            memorymaximumsize="256m" srcdir="${src}" destdir="${buildportal}">
	        <classpath>
	           
	        	<path refid="project.jar.path" />
	        </classpath>
	    </javac>
		  <copy todir="WebContent/WEB-INF/classes"> 
		      <fileset dir="src" excludes="**/*.java"/> 
		  </copy> 
	</target>
		
	<!-- Build LexmarkServicesCommon-->
	<target name="compileCommom" description="compile the source for LexmarkServicesCommon" >
		    <javac  fork="true"  memoryinitialsize="256m"
	               memorymaximumsize="256m" srcdir="${srcommon}" destdir="${buildportal}">
		        <classpath>
		           
		        	<path refid="project.jar.path" />
		        </classpath>
		    </javac>
			<copy todir="${buildportal}/DoMappings">
				<fileset dir="${srcommon}/DoMappings" />
			</copy>
			<copy todir="${buildportal}/resource">
				<fileset dir="${srcommon}/resource" />
			</copy>
			<copy todir="${buildportal}/DoMappings">
				<fileset dir="${srcommon}/DoMappings" />
			</copy>
			<copy todir="${buildportal}/com/lexmark/domain">
				<fileset dir="${srcommon}/com/lexmark/domain" excludes="**/*.java"/>
			</copy>
		</target>
	<!-- Build DctmWebServiceClient-->
	<!--
	<target name="comiledctm" description="compile the source for DctmWebServiceClient" >
	    <javac  fork="true"  memoryinitialsize="256m"
            memorymaximumsize="256m" srcdir="${srcdctm}" destdir="${buildportal}">
	        <classpath>
	           
	        	<path refid="project.jar.path" />
	        </classpath>
	    </javac>
	</target>-->
	<!-- Build LexmarkServicesWebService-->
	<target name="compileweservice" description="compile the source for LexmarkServicesWebService" >
	    <javac fork="true"  memoryinitialsize="256m"
            memorymaximumsize="256m"  srcdir="${srwebservice}" destdir="${buildportal}">
	        <classpath>
	           
	        	<path refid="project.jar.path" />
	        </classpath>
	    </javac>
	</target>
	
	<target name="deploy-exploded" > 
			<delete file="WebContent/WEB-INF/liferay-web.xml"/>
				<delete file="WebContent/WEB-INF/web.xml"/>
			<copy file="web-config/web.xml" todir="WebContent/WEB-INF"/>
		   <copy file="${context.file}" todir="${auto.deploy.dir}"/> 
		 </target>   

</project>
