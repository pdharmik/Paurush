<project name="LexmarkReportScheduler" default="zip" basedir=".">
    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib" value="lib"/>
  <property name="projectName" value="LexmarkReportScheduler"/>
  <property name="jarName" value="${projectName}.jar"/>
  <property name="zipFileName" value="${projectName}.zip"/>
  <property name="configurationFolder" location="../LexmarkBuild/environment" />
  <property name="ant-contrib.jar" location="..\ExternalLib\ant\ant-contrib-1.0b3.jar"></property>
	  
 <path id="project.jar.path">	
  <fileset dir="${lib}" >
	  <include name="**/*.jar"/>
  </fileset>	
 	
  <fileset dir="../LexmarkServicesCommon/dist/lib" >
    <include name="**/*.jar"/>
  </fileset>
 </path>
	
  <target name="buildLexmarkServicesCommon">
  	  <ant dir="../LexmarkServicesCommon" target="dist" inheritAll="false"/>
   </target>

  <target name="init">
    <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpath="${ant-contrib.jar}"/>
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init, buildLexmarkServicesCommon"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
  	<javac destdir="${build}" source="1.6" target="1.6" debug="true" debuglevel="lines,vars,source">
  	    <compilerarg value="-Xlint:unchecked"/>
  	    <src path="${src}"/>
  	    <classpath refid="project.jar.path" />
  	</javac>
  

  	
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
	
  	<fail message="Please specify which environment to build DEV, PROD or QA by:  ant dist -Dbuild.env=QA">
  	     <condition>
  	       <not>
  	         <isset property="build.env"/>
  	       </not>
  	     </condition>
    </fail>
	
    <mkdir dir="${dist}/lib"/>

  	<copy todir="${build}" file="${configurationFolder}/${build.env}/reportScheduler/mail.properties" overwrite="true"/>
  	<copy todir="${build}" file="${configurationFolder}/${build.env}/reportScheduler/reportScheduler.properties" overwrite="true"/>
  	<copy todir="${build}" file="${configurationFolder}/${build.env}/reportScheduler/boDetails.properties" overwrite="true"/>
  	<copy todir="${build}" file="${configurationFolder}/${build.env}/amindweb.properties" overwrite="true"/>
  	<copy todir="${build}" file="${configurationFolder}/${build.env}/SessionObject.xml" overwrite="true"/>
	<copy todir="${build}" file="${configurationFolder}/${build.env}/siebel.properties" overwrite="true"/>



    <!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
    <jar jarfile="${dist}/lib/${jarName}" basedir="${build}">
    	<manifest>
    	    <attribute name="Main-Class" value="com.lexmark.reportScheduler.server.Scheduler"/>
    	</manifest>
        <fileset dir="${src}">
                 <exclude name="**/*.java"/>
        	     <exclude name="mail.properties"/>
        		 <exclude name="reportScheduler.properties"/>
				 <exclude name="boDetails.properties"/>
		   	     <exclude name="amindweb.properties"/>
   				 <exclude name="SessionObject.xml"/>
   	     		 <exclude name="siebel.properties"/>
        </fileset>
    </jar>
  </target>

  <target name="zip" depends="dist" 
        description="zip all the jars" >
  	<mkdir dir="${dist}/tmp"/>
  	<mkdir dir="${dist}/tmp/lib"/>
  	<mkdir dir="${dist}/tmp/dist"/>
  	<mkdir dir="${dist}/tmp/dist/lib"/>
  	
  	<copy file="../LexmarkServicesCommon/dist/lib/LexmarkServicesCommon.jar" todir="${dist}/tmp/lib" />
	<copy file="${dist}/lib/${projectName}.jar" todir="${dist}/tmp/dist/lib" />
  	
  	<zip destfile="${dist}/${zipFileName}">
		<fileset dir="." includes="lib/**" />
		<fileset dir="${dist}/tmp/"/>
	</zip>
  	
  	 <delete dir="${dist}/tmp"/>
   
  </target>
	
	
  <target name="clean"
        description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  </target>
	
  <target name="run">
  	<property name="project.classpath" refid="project.jar.path"/>
  	<java classname="com.lexmark.reportScheduler.server.Scheduler" fork="true">
		<arg line="-IntervalEndTime 2359 -ReportEngineThreads 4 -SelectionFlag  NORMAL"/>
		<classpath>
		  <pathelement location="${dist}/lib/${jarName}"/>	
		  <pathelement path="${project.classpath}"/>
		</classpath>
	</java>
  	
  </target>
</project>